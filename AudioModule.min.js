function chk(e,t){"use strict";return"undefined"==typeof t||null===typeof t||t===!1?"undefined"==typeof e||null===typeof e?!0:!1:"undefined"==typeof e||null===typeof e||isNaN(e)?!0:!1}function AudioSource(e,t){"use strict";function s(e){var s=new XMLHttpRequest;s.open("GET",e,!0),s.responseType="arraybuffer",s.onload=function(){ctx.decodeAudioData(s.response,function(s){return s?(o.buffer=s,void(t&&t())):void console.error("AudioSource - Error decoding file data: "+e)},function(e){console.error("AudioSource - DecodeAudioData error: ",e)})},s.send()}var o=this;chk(e)?console.error("AudioSource url is missing or not found."):s(e,t)}function AudioMultiSource(e,t,o){"use strict";function n(e){for(var t=0;t<e.length;t+=1)u(e[t],t)}function u(e,n){var u=new XMLHttpRequest;u.open("GET",e,!0),u.responseType="arraybuffer",u.onload=function(){ctx.decodeAudioData(u.response,function(u){return u?(s.buffer[n]=u,void(t&&(o===!0?n===i&&t():t()))):void console.error("error decoding file data: "+e)},function(e){console.error("decodeAudioData error",e)})},u.send()}var s=this,i=e.length-1;this.buffer=[],chk(e)?console.error("AudioMultiSource url is missing or not found."):n(e)}function AudioEffect(e){"use strict";this.source=ctx.createBiquadFilter(),chk(e)?console.error("AudioEffect options not set. Please set the filter type. Other options are optional."):chk(e.type)?console.error("AudioEffect filter type is not set or recognized. Please set the filter type. Try: lowpass, highpass, bandpass, lowshelf, highshelf, peaking, notch or allpass."):(this.source.type=e.type,chk(e.frequency,!0)?console.info("AudioEffect frequency is not set or not a number. Default is set to "+this.source.frequency.defaultValue):this.source.frequency.value=e.frequency,chk(e.Q,!0)?console.info("AudioEffect Q is not set or not a number. Default is set to "+this.source.Q.defaultValue+"."):this.source.Q.value=e.Q,chk(e.destination)?(console.info("AudioEffect destination is not set. Default is set to AudioContext().destination."),this.source.connect(ctx.destination)):this.source.connect(e.destination))}function distortionCurve(e){for(var u,t="number"==typeof e?e:50,o=44100,s=new Float32Array(o),i=Math.PI/180,n=0;o>n;++n)u=2*n/o-1,s[n]=(3+t)*u*20*i/(Math.PI+t*Math.abs(u));return s}function AudioDistortion(e){"use strict";this.source=ctx.createWaveShaper(),chk(e)?(this.source.curve=distortionCurve(50),console.info("AudioDistortion options are not set. Default is set to 50.")):(chk(e.curve,!0)?this.source.curve=distortionCurve(50):this.source.curve=distortionCurve(e.curve),chk(e.oversample)?(this.source.oversample="none",console.info('AudioDistortion oversample is not set. Default is set to "none". Options are: "none", "2x" and "4x".')):this.source.oversample=e.oversample,chk(e.destination)?(this.source.connect(ctx.destination),console.info("AudioDistortion destination is not set. Default is set to AudioContext().destination.")):this.source.connect(e.destination))}function AudioGain(e){"use strict";this.source=ctx.createGain(),chk(e)?(this.source.gain.value=this.node.gain.defaultValue,this.source.connect(ctx.destination),console.info("AudioGain options are not set. Default value is set to 1 and destination is set to AudioContext().destinations.")):(chk(e.gainValue,!0)?(this.source.gain.value=this.source.gain.defaultValue,console.info("AudioGain gainValue is not set. Default is set to 1.")):this.source.gain.value=e.gainValue,chk(e.destination)?(this.source.connect(ctx.destination),console.info("AudioGain destination is not set. Default is set to AudioContext().destination.")):this.source.connect(e.destination))}function AudioPan(e){"use strict";this.source=ctx.createStereoPanner(),chk(e)?(this.source.connect(ctx.destination),console.info("AudioPan value and destination not set. Default value is set to 0 and default destination is set to  AudioContext().destination.")):(chk(e.pan,!0)?(this.source.pan.value=this.source.pan.defaultValue,console.info("AudioPan pan value is not set. Default is set to 0.")):this.source.pan.value=e.pan,chk(e.destination)?(this.source.connect(ctx.destination),console.info("AudioPan destination is not set. Default is set to AudioContext().destination.")):this.source.connect(e.destination))}function AudioPlayer(e){"use strict";this.source=ctx.createBufferSource(),chk(e)?(console.error("AudioPlayer options not set. Please set the source. Other options are optional."),console.info("AudioPlayer options are: source, name, loop, onended(callback).")):(chk(e.source)?console.error("AudioPlayer is missing source. Please create a source with the AudioSource constructor en set the AudioPlayer source to the created source."):this.source.buffer=e.source,chk(e.detune)?this.source.detune.value=this.source.detune.defaultValue:this.source.detune.value=e.detune,chk(e.loop)?(this.source.loop=!1,console.info("AudioPlayer loop is not set. Default is set to false")):(this.source.loop=e.loop,chk(e.loopStart,!0)?this.source.loopStart=0:this.source.loopStart=e.loopStart/1e3,chk(e.loopEnd,!0)?this.source.loopEnd=0:this.source.loopEnd=e.loopEnd/1e3),chk(e.playbackRate)?this.source.playbackRate.value=this.source.playbackRate.defaultValue:this.source.playbackRate.value=e.playbackRate,chk(e.onended)?this.source.onended=null:this.source.onended=e.onended,chk(e.name)?(this.source.name="AudioPlayer",console.info("AudioPlayer name is not set. Default is set to AudioPlayer.")):this.source.name=e.name)}function AudioOsc(e){"use strict";this.source=ctx.createOscillator(),chk(e)?(this.source.type="sine",this.source.frequency.value=440):(chk(e.type)?this.source.type="sine":"sine"!==e.type&&"square"!==e.type&&"sawtooth"!==e.type&&"triangle"!==e.type?(this.source.type="sine",console.error('AudioOsc.type is not correct. Type can be: "sine", "square", "sawtooth" or "triangle".')):this.source.type=e.type,chk(e.frequency,!0)?this.source.frequency.value=this.sourc.frequency.defaultValue:this.source.frequency.value=e.frequency,chk(e.detune,!0)?this.source.detune.value=this.source.detune.defaultValue:this.source.detune.value=e.detune)}function AudioConvolver(e){"use strict";this.source=ctx.createConvolver(),chk(e)?console.error("AudioConvolver options not set. Please at least set the source."):(chk(e.normalize)?this.source.normalize=!0:this.source.normalize=e.normalize,chk(e.source)?console.error("AudioConvolver is missing source. Please create a source with the AudioSource constructor en set the AudioPlayer source to the created source."):this.source.buffer=e.source,chk(e.destination)?this.source.connect(ctx.destination):this.source.connect(e.destination))}"AudioContext"in window||"webkitAudioContext"in window?console.log("Yay, AudioContext is supported. Go have fun!"):alert("It seems that your browser does not support the Web Audio API (AudioContext). Please use the latest Chrome, Firefox, Edge or Safari to use this system.");var ctx=new AudioContext||new webkitAudioContext;AudioPlayer.prototype.play=function(e){"use strict";chk(e)?(this.source.connect(ctx.destination),this.source.start(ctx.currentTime)):(chk(e.destination)?(this.source.connect(ctx.destination),console.info("AudioPlayer.play destination is not set. Default set to AudioContext().destination.")):"destination"===e.destination?this.source.connect(ctx.destination):this.source.connect(e.destination),chk(e.delay,!0)?(console.info("AudioPlayer.start delay is not set or NaN. Default set to 0."),this.source.start(ctx.currentTime)):this.source.start(ctx.currentTime+e.delay/1e3)),console.info("Playing "+this.source.name),this.source.playing=!0},AudioPlayer.prototype.stop=function(e){"use strict";var t=this;chk(e)?(this.source.stop(ctx.currentTime),this.source.disconnect()):chk(e.delay,!0)?(console.info("AudioPlayer.stop delay is not set or NaN. Default set to 0."),this.source.stop(ctx.currentTime),this.source.disconnect()):(this.source.stop(ctx.currentTime+e.delay/1e3),setTimeout(function(){t.source.disconnect()},e.delay)),console.info("Stopped "+this.source.name),this.source.playing=!1},AudioOsc.prototype.play=function(e){"use strict";chk(e)?(this.source.connect(ctx.destination),this.source.start(ctx.currentTime)):(chk(e.destination)?this.source.connect(ctx.destination):this.source.connect(e.destination),chk(e.delay,!0)?this.source.start(ctx.currentTime):this.source.start(ctx.currentTime+e.delay/1e3)),this.source.playing=!0},AudioOsc.prototype.stop=function(e){"use strict";var t=this;chk(e)?(this.source.stop(ctx.currentTime),this.source.disconnect()):chk(e.delay,!0)?(this.source.stop(ctx.currentTime),this.source.disconnect()):(this.source.stop(ctx.currentTime+e.delay/1e3),setTimeout(function(){t.source.disconnect()},e.delay)),this.source.playing=!1};
